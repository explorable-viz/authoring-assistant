let getByX x table = match getByField "x" x table as {
    None -> error "absurd";
    Some x -> x
};

let mkPercent num = (numToStr (num * 100)) ++ "%";

let referToBar bar = "the bar representing scenario " ++ bar.x ++ " has a z value of " ++ (numToStr (head bar.bars).z);

let probAsText = likelihoodMap likelihoods;

let stackedBarHeight stackedBar = sum [ bar.z | bar <- stackedBar.bars ];

let getFirstBar stackedBars = match getByField "x" "Total" stackedBars as {
    None -> error "absurd";
    Some bar -> bar
};

let explainCorrespondingBars bars x = 
    if length bars == length (filter (fun bar -> bar.x == x) bars)
    then "the bars on the left of each chart which represent " ++ x ++ " emissions"
    else error "absurd";

let rightBar3 = getByX "Industry" rightBarData;
    rightBar3height = (head rightBar3.bars).z;
    leftBar2 = getByX "Consumer" leftBarData;
    firstBars = map getFirstBar [leftBarData, rightBarData];
    meanFirstBar = (sum (map stackedBarHeight firstBars)) / (length firstBars)
in MultiView {
    leftBarChart:
        BarChart {
            caption: "Example bar chart for text-viz",
            size: { width: 275, height: 185 },
            stackedBars: leftBarContents
        },
    rightBarChart: 
        BarChart {
            caption: "Second example bar chart",
            size: { width: 275, heigh: 185 },
            stackedBars: rightBarContents
        },
    explanation:
        LinkedText [ "From the barchart shown above, we see that ", referToBar rightBar3
                   , "  which suggests that in the high-emissions scenario it is ", probAsText (computeProb (40, 80) rightBar3height)
                   , " that warming will exceed the global warming target of 2c by 2100."
                   , " In contrast, in the lowest-emission scenario, the probability of exceeding the target is only "
                   ,  mkPercent (computeProb (25, 45) (head leftBar2.bars).z)
                   , " and we can see that ", explainCorrespondingBars firstBars "Total", " have an average value of ", numToStr meanFirstBar, "." ]
}