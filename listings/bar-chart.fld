let getByX x table = fromSome (getByField "x" x table);

let mkPercent num = (numToStr (num * 100)) ++ "%";

let referToBar bar = "the bar representing scenario " ++ bar.x ++ " has a z value of " ++ (numToStr (head bar.bars).z);

let probAsText = likelihoodMap likelihoods;

let stackedBarHeight stackedBar = sum [ bar.z | bar <- stackedBar.bars ];

let getTotal table = fromSome (getByField "x" "Total" table);

let explainCorrespondingBars bars x = 
    if length bars == length (filter (fun bar -> bar.x == x) bars)
    then "the bars on the left of each chart which represent " ++ x ++ " emissions"
    else error "absurd";

let mkBarChart source = BarChart {
                        caption: "Example bar-chart for scenario " ++ source.scenario,
                        size: { width: 275, height: 185 },
                        stackedBars: source.data 
                      };

let ssp119Industry = getByX "Industry" ssp119.data;
    ssp119IndHeight = (head rightBar3.bars).z;
    ssp245Consumer = getByX "Consumer" ssp245.data;
    totals = map getTotal [ssp119, ssp245];
    meanFirstBar = (sum (map stackedBarHeight totals)) / (length totals)
in MultiView {
    ssp119BarChart: mkBarChart ssp119
    rightBarChart: mkBarChart ssp245
    explanation:
        LinkedText [ "From the barchart shown above, we see that ", referToBar rightBar3
                   , " which suggests that in the high-emissions scenario it is ", probAsText (computeProb (40, 80) ssp119IndHeight)
                   , " that warming will exceed the global warming target of 2c by 2100."
                   , " In contrast, in the lowest-emission scenario, the probability of exceeding the target is only "
                   ,  mkPercent (computeProb (25, 45) (head ssp245Consumer.bars).z)
                   , " and we can see that ", explainCorrespondingBars firstBars "Total", " have an average value of ", numToStr meanFirstBar]
}