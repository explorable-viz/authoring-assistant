-- | stackedBarHeight
-- like barHeight, but considers the 
let stackedBarHeight stackedBar = sum [ bar.z | bar <- stackedBar.bars ];

-- | getters
-- These functions get the record encoding the information for a given bar in a bar-chart
let getTotal (BarChart record) = fromSome (findWithKey "x" "Total" record.stackedBars);
let getCO2 (BarChart record)= fromSome (findWithKey "x" "CO2" record.stackedBars);
let getNonCO2 (BarChart record) = fromSome (findWithKey "x" "Non-CO2" record.stackedBars);
let getByX x table = fromSome (findWithKey "x" x table);


-- | barHeight 
-- To find the height of a bar, we need to index the bar-chart for 
-- a specific bar's x-value, and then sum the height's of each segment
-- in the bar labelled with "x" 
let barHeight (BarChart bc) x =
    let bar = fromSome (findWithKey "x" x bc.stackedBars)
    in sum [ segment.z | segment <- bar.bars ];

-- | explainBars
-- In this example, the bars represent estimations of total global-warming
-- in °C from a given source of warming. 
let explainBars bars x = 
    if length bars == length (filter (fun bar -> bar.x == x) bars)
    then "(°C; " ++ x ++ " bar)"
    else error "absurd";

let mkBarChart scenName table = 
    -- | Within the bar plot for `scenName`, the bars represent total warming `explainBar @returns.stackedBars "Total"`,
    -- warming contributions from CO2 `explainBar @returns.stackedBars "CO2"`
    -- and from non-CO2 GHG's `explainBar @returns.stackedBars "Non-CO2"`
    BarChart {
        caption: "Example bar chart for scenario " ++ scenName,
        size: { width: 275, height: 185 },
        stackedBars: map (fun record -> { x: record.type, bars: [ { y: "emissions", z: record.emissions } ]}) table
    };

-- | ssp119, ssp245
-- Construct BarChart's using data pertaining to the shared socioeconomic pathway (SSP) scenarios
-- Outlined in the IPCC AR6 report, with data from WG1 
let ssp119 = mkBarChart "SSP1-1.9" ssp119Source;
let ssp245 = mkBarChart "SSP2-4.5" ssp245Source;

-- | total, co2, nonco2
-- Extract the bars pertaining to each source of warming from the bar-chart objects detailed in ssp119, ssp245
let total = map getTotal [ssp119, ssp245];
let co2 = map getCO2 [ssp119, ssp245];
let nonco2 = map getNonCO2 [ssp119, ssp245];

-- | meanTotal
-- calculate the mean total warming across ssp119, ssp245
let meanTotal = (sum (map stackedBarHeight total)) / (length total);

-- | MultiView
-- The Multiview sequentializes the visual elements of the mini-article,
-- arranging them in vertical blocks. The two bar-charts are rendered side-by-side
-- and the LinkedText object is underneath them
MultiView {
    leftBarChart: ssp119,
    rightBarChart: ssp245
}
