{
  "datasets": [ "datasets/scigen/1906.02780v1-17.json" ],
  "imports": ["scigen", "util", "datasets/scigen/_1906_02780v1_17"],
  "variables": {},
  "testing-variables": {},
  "paragraph": [
    {
      "type": "literal",
      "value": "Table 4 shows that increasing the number of layers from 1 to 5 results in a BLEU increase of only"
    },
    {
      "type": "expression",
      "expression": "last (map (fun x -> x.bleu) (filter (fun x -> (x.layers == 5) `and` (x.max_chunk_size == \"k=6\")) tableData)) - head (map (fun x -> x.bleu) (filter (fun x -> (x.layers == 1) `and` (x.max_chunk_size == \"k=6\")) tableData))",
      "categories": ["data_retrieval"]
    },
    {
      "type": "literal",
      "value": ", while the speedup drops from"
    },
    {
      "type": "expression",
      "expression": "(findWhere (fun x -> (x.layers == 1) `and` (x.max_chunk_size == \"k=6\")) tableData).speedup",
      "categories": ["data_retrieval"]
    },
    {
      "type": "literal",
      "value": "to"
    },
    {
      "type": "expression",
      "expression": "(findWhere (fun x -> (x.layers == 5)) tableData).speedup",
      "categories": ["data_retrieval"]
    },
    {
      "type": "literal",
      "value": ". The final row of Table 4 shows that exposing the parse decoder to multiple possible chunking of the same sentence during training allows it to choose a sequence of chunks that has a higher likelihood at test time, improving BLEU by"
    },
    {
      "type": "expression",
      "expression": "findWithKey_ \"max_chunk_size\" \"k in {1...6}\" tableData).bleu - (findWhere (fun x -> (x.layers == 1) `and` (x.max_chunk_size == \"k=6\")) tableData).bleu",
      "categories": ["difference", "data_retrieval"]
    },
    {
      "type": "literal",
      "value": "while decreasing the speedup from"
    },
    {
      "type": "expression",
      "expression": "(findWhere (fun x -> (x.layers == 1) `and` (x.max_chunk_size == \"k=6\")) tableData).speedup",
      "categories": ["data_retrieval"]
    },
    {
      "type": "literal",
      "value": "to"
    },
    {
      "type": "expression",
      "expression": "(findWithKey_ \"max_chunk_size\" \"k in {1...6}\" tableData).speedup",
      "categories": ["data_retrieval"]
    }
  ]
}
