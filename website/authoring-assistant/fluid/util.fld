let insert cmp x sorted =
   let helper [] = [x];
       helper (y: ys) =
           if cmp x y
           then x : (y: ys)
           else y : helper ys
   in helper sorted;

let insertionSort cmp lst =
   let helper [] sorted = sorted;
       helper (x: xs) sorted = helper xs (insert cmp x sorted)
   in helper lst [];

let findIndex fName x ys =
   let helper [] rank = -1;
       helper (y: ys') rank =
           if y.[fName] == x then rank + 1
           else helper ys' (rank + 1)
   in helper ys 0;

let findWithKey' fName x table =
   fromSome (findWithKey fName x table);

let findWhere pred table =
   fromSome (find pred table);

-- (a -> Number) -> List a -> a
let maximumBy f lst =
  let helper [] current = current;
      helper (x: xs) current =
        if f x > f current then helper xs x else helper xs current
  in match lst as {
    [] -> error "Empty list!";
    (x: xs) -> helper xs x
  };

